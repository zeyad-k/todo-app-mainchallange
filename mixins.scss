@mixin background-properties($image) {
  background-image: url($image);
  background-repeat: no-repeat;
  background-size: 100%;
}

@mixin boxProperties {
  display: flex;
  gap: var(--default-padding);
  background-color: var(--color-bg-input);
  padding: var(--default-padding);
  max-width: 100%;
  box-shadow: var(--box-shadow);
  .App--isDark & {
    background-color: var(--background-color);
  }
}

$box-shadow: 0px 15px 30px rgba(0, 0, 0, 0.2);
@mixin box-shadow {
  box-shadow: 0px 15px 30px rgba(0, 0, 0, 0.2);
}

// Define breakpoints
// $breakpoints: (
//   "verysmall": 375px,
//   "small": 576px,
//   "medium": 768px,
//   "large": 992px,
//   "xlarge": 1200px,
// );

// // Mixin for responsive design
// @mixin respond-to($breakpoint) {
//   @if map-has-key($breakpoints, $breakpoint) {
//     @media (min-width: map-get($breakpoints, $breakpoint)) {
//       @content;
//     }
//   } @else {
//     @warn 'Invalid breakpoint: #{$breakpoint}.';
//   }
// }
